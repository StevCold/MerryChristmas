{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { createContext, useState, useMemo, useRef, useContext, useEffect } from \"react\";\nconst selectionContext = createContext(null);\nfunction Selection({\n  children,\n  enabled = true\n}) {\n  const [selected, select] = useState([]);\n  const value = useMemo(() => ({\n    selected,\n    select,\n    enabled\n  }), [selected, select, enabled]);\n  return /* @__PURE__ */jsx(selectionContext.Provider, {\n    value,\n    children\n  });\n}\nfunction Select({\n  enabled = false,\n  children,\n  ...props\n}) {\n  const group = useRef(null);\n  const api = useContext(selectionContext);\n  useEffect(() => {\n    if (api && enabled) {\n      let changed = false;\n      const current = [];\n      group.current.traverse(o => {\n        o.type === \"Mesh\" && current.push(o);\n        if (api.selected.indexOf(o) === -1) changed = true;\n      });\n      if (changed) {\n        api.select(state => [...state, ...current]);\n        return () => {\n          api.select(state => state.filter(selected => !current.includes(selected)));\n        };\n      }\n    }\n  }, [enabled, children, api]);\n  return /* @__PURE__ */jsx(\"group\", {\n    ref: group,\n    ...props,\n    children\n  });\n}\nexport { Select, Selection, selectionContext };\n//# sourceMappingURL=Selection.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}