{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { ToneMappingEffect, EffectAttribute } from \"postprocessing\";\nimport { forwardRef, useMemo, useEffect } from \"react\";\nconst ToneMapping = forwardRef(function ToneMapping2({\n  blendFunction,\n  adaptive,\n  mode,\n  resolution,\n  maxLuminance,\n  whitePoint,\n  middleGrey,\n  minLuminance,\n  averageLuminance,\n  adaptationRate,\n  ...props\n}, ref) {\n  const effect = useMemo(() => new ToneMappingEffect({\n    blendFunction,\n    adaptive,\n    mode,\n    resolution,\n    maxLuminance,\n    whitePoint,\n    middleGrey,\n    minLuminance,\n    averageLuminance,\n    adaptationRate\n  }), [blendFunction, adaptive, mode, resolution, maxLuminance, whitePoint, middleGrey, minLuminance, averageLuminance, adaptationRate]);\n  useEffect(() => {\n    effect.dispose();\n  }, [effect]);\n  return /* @__PURE__ */jsx(\"primitive\", {\n    ...props,\n    ref,\n    object: effect,\n    attributes: EffectAttribute.CONVOLUTION\n  });\n});\nexport { ToneMapping };\n//# sourceMappingURL=ToneMapping.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}