{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { forwardRef, useContext, useMemo } from \"react\";\nimport { SSAOEffect, BlendFunction } from \"postprocessing\";\nimport { EffectComposerContext } from \"../EffectComposer.js\";\nconst SSAO = forwardRef(function SSAO2(props, ref) {\n  const {\n    camera,\n    normalPass,\n    downSamplingPass,\n    resolutionScale\n  } = useContext(EffectComposerContext);\n  const effect = useMemo(() => {\n    if (normalPass === null && downSamplingPass === null) {\n      console.error(\"Please enable the NormalPass in the EffectComposer in order to use SSAO.\");\n      return {};\n    }\n    return new SSAOEffect(camera, normalPass && !downSamplingPass ? normalPass.texture : null, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 30,\n      rings: 4,\n      distanceThreshold: 1,\n      distanceFalloff: 0,\n      rangeThreshold: 0.5,\n      rangeFalloff: 0.1,\n      luminanceInfluence: 0.9,\n      radius: 20,\n      bias: 0.5,\n      intensity: 1,\n      color: void 0,\n      // @ts-ignore\n      normalDepthBuffer: downSamplingPass ? downSamplingPass.texture : null,\n      resolutionScale: resolutionScale != null ? resolutionScale : 1,\n      depthAwareUpsampling: true,\n      ...props\n    });\n  }, [camera, normalPass, props]);\n  return /* @__PURE__ */jsx(\"primitive\", {\n    ref,\n    object: effect,\n    dispose: null\n  });\n});\nexport { SSAO };\n//# sourceMappingURL=SSAO.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}