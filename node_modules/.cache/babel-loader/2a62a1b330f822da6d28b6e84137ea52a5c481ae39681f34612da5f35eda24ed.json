{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { useThree } from \"@react-three/fiber\";\nimport { LUT3DEffect } from \"postprocessing\";\nimport { forwardRef, useMemo, useLayoutEffect } from \"react\";\nconst LUT = forwardRef(function LUT2({\n  lut,\n  tetrahedralInterpolation,\n  ...props\n}, ref) {\n  const effect = useMemo(() => new LUT3DEffect(lut, props), [lut, props]);\n  const invalidate = useThree(state => state.invalidate);\n  useLayoutEffect(() => {\n    if (tetrahedralInterpolation) effect.tetrahedralInterpolation = tetrahedralInterpolation;\n    if (lut) effect.lut = lut;\n    invalidate();\n  }, [effect, invalidate, lut, tetrahedralInterpolation]);\n  return /* @__PURE__ */jsx(\"primitive\", {\n    ref,\n    object: effect,\n    dispose: null\n  });\n});\nexport { LUT };\n//# sourceMappingURL=LUT.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}