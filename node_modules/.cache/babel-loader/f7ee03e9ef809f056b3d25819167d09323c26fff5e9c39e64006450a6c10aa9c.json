{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefa\\\\OneDrive\\\\Desktop\\\\Merry Christmas\\\\src\\\\SnowGlobeModel.js\",\n  _s2 = $RefreshSig$();\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nAuthor: MMKH (https://sketchfab.com/mmkh)\nLicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nSource: https://sketchfab.com/3d-models/snowglobe-day-11-3dinktober2019-snow-08b4443a71c94647a1298346a1ea1203\nTitle: Snowglobe - Day 11 #3DInktober2019-Snow\n*/\n\nimport { useFrame, useThree } from '@react-three/fiber';\nimport { MeshTransmissionMaterial, useGLTF, useTexture, Text, Billboard, Text3D } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { useMemo, useRef, useLayoutEffect, useState, useEffect } from 'react';\nimport { easing } from 'maath';\nimport gsap from 'gsap';\nimport SnowFlakes from './SnowFlakes';\nimport FireWorks from './FireWorks';\nimport LumaWorld from './LumaWorld';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SnowGlobeModel(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    nodes,\n    materials\n  } = useGLTF('/snowglobe-transformed.glb');\n  const footer = document.querySelector('.footer');\n  const snowGlobeRef = useRef();\n  const snowGlobeRef2 = useRef();\n  const internalWorldRef = useRef();\n  const fireWorksRef = useRef();\n  const [insideMesh, setInsideMesh] = useState(false);\n  const groupRef = useRef();\n  const texture = useTexture('/epic.jpg');\n  const {\n    camera\n  } = useThree();\n  const cameraPosition = camera.position;\n  const ray = new THREE.Ray(new THREE.Vector2(0, 0), cameraPosition);\n  const raycaster = new THREE.Raycaster();\n  function useGsapContext(scope) {\n    _s();\n    const ctx = useMemo(() => gsap.context(() => {}, scope), [scope]);\n    return ctx;\n  }\n  _s(useGsapContext, \"Ttyd6XmlIhuy98kaTe020DRPOH0=\");\n  const ctx = useGsapContext(snowGlobeRef);\n  useLayoutEffect(() => {\n    gsap.to(camera.position, {\n      z: props.inside ? 0.1 : 3,\n      x: props.inside ? 0.1 : 3,\n      ease: 'power3.inOut',\n      duration: 1.8\n    });\n    return () => ctx.revert();\n  }, [props.inside]);\n  useFrame((state, delta) => {\n    checkIntersection(snowGlobeRef.current, delta);\n  });\n  const checkIntersection = (object, delta) => {\n    raycaster.set(cameraPosition, ray.direction);\n    const intersections = raycaster.intersectObject(object);\n    if (intersections.length > 0) {\n      setInsideMesh(false);\n    } else {\n      setInsideMesh(true);\n    }\n    easing.dampC(internalWorldRef.current.material.color, intersections.length > 0 ? 'grey' : 'white', 0.25, delta);\n    easing.damp(footer.style, 'opacity', intersections.length > 0 ? '0.1' : '1', 0.25, delta);\n  };\n  useEffect(() => {\n    if (!insideMesh) {\n      snowGlobeRef2.current.visible = false;\n      snowGlobeRef.current.visible = false;\n      fireWorksRef.current.visible = true;\n      camera.fov = 95;\n      camera.updateProjectionMatrix();\n    } else {\n      camera.fov = 65;\n      camera.updateProjectionMatrix();\n      snowGlobeRef2.current.visible = true;\n      snowGlobeRef.current.visible = true;\n      fireWorksRef.current.visible = false;\n    }\n  }, [insideMesh]);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupRef,\n    ...props,\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: snowGlobeRef,\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.build_scenebuild_sceneSnow_Scene_Snow_Globe___Default1_0.geometry,\n      children: /*#__PURE__*/_jsxDEV(MeshTransmissionMaterial, {\n        backsideThickness: 8,\n        samples: 4,\n        thickness: 0.9,\n        anisotropicBlur: 0.8,\n        ior: 1.8,\n        iridescence: 0.5,\n        iridescenceIOR: 1,\n        iridescenceThicknessRange: [0, 1400],\n        clearcoat: 1,\n        roughness: 0.2,\n        envMapIntensity: 0.7,\n        metalness: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: internalWorldRef,\n      position: [0, 15, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [12.5, 24, 24]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        map: texture,\n        side: THREE.BackSide,\n        envMapIntensity: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FireWorks, {\n        ref: fireWorksRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: snowGlobeRef2,\n      castShadow: true,\n      receiveShadow: true,\n      geometry: nodes.build_scenebuild_sceneSnow_Scene_blinn1_0.geometry,\n      children: [/*#__PURE__*/_jsxDEV(\"meshPhysicalMaterial\", {\n        metalness: 0.2,\n        roughness: 0.2,\n        color: 'grey',\n        envMapIntensity: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SnowFlakes, {\n        count: 2000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), !props.isMobile && /*#__PURE__*/_jsxDEV(LumaWorld, {\n      visible: insideMesh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Texts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s2(SnowGlobeModel, \"9U58Jnqy4bxAgpKuhnTO2cmUsbA=\", true, function () {\n  return [useGLTF, useTexture, useThree, useFrame];\n});\n_c = SnowGlobeModel;\nuseGLTF.preload('/snowglobe-transformed.glb');\nfunction Texts() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text3D, {\n      letterSpacing: 0.06,\n      size: 0.3,\n      font: \"/Inter_Bold.json\",\n      position: [-2.8, 3.3, 10],\n      children: [\"Stefan Cimpan\", /*#__PURE__*/_jsxDEV(\"meshPhysicalMaterial\", {\n        metalness: 0.2,\n        roughness: 0.2,\n        color: '#a1a1a1'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Billboard, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        font: \"/DancingScript-VariableFont_wght.ttf\",\n        maxWidth: 3.5,\n        textAlign: \"center\",\n        position: [0, 12.45, 0],\n        fontSize: \"0.35\",\n        lineHeight: 0.85,\n        children: [\"Wishing you a restful holiday season. \", '\\n\\n', \"May your Christmas be blessed with lots of love, peace, and happiness.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        maxWidth: 2.5,\n        textAlign: \"center\",\n        position: [0, 11.2, 0],\n        fillOpacity: 0.6,\n        fontSize: \"0.1\",\n        children: \"Thank you for all your support in 2023. Great things are coming in 2024. Please stay tunned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        maxWidth: 1.5,\n        textAlign: \"center\",\n        position: [0, 10.8, 0],\n        fontSize: \"0.08\",\n        children: \"Stefan Cimpan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Texts;\nvar _c, _c2;\n$RefreshReg$(_c, \"SnowGlobeModel\");\n$RefreshReg$(_c2, \"Texts\");","map":{"version":3,"names":["useFrame","useThree","MeshTransmissionMaterial","useGLTF","useTexture","Text","Billboard","Text3D","THREE","useMemo","useRef","useLayoutEffect","useState","useEffect","easing","gsap","SnowFlakes","FireWorks","LumaWorld","jsxDEV","_jsxDEV","Fragment","_Fragment","SnowGlobeModel","props","_s2","_s","$RefreshSig$","nodes","materials","footer","document","querySelector","snowGlobeRef","snowGlobeRef2","internalWorldRef","fireWorksRef","insideMesh","setInsideMesh","groupRef","texture","camera","cameraPosition","position","ray","Ray","Vector2","raycaster","Raycaster","useGsapContext","scope","ctx","context","to","z","inside","x","ease","duration","revert","state","delta","checkIntersection","current","object","set","direction","intersections","intersectObject","length","dampC","material","color","damp","style","visible","fov","updateProjectionMatrix","ref","dispose","children","castShadow","receiveShadow","geometry","build_scenebuild_sceneSnow_Scene_Snow_Globe___Default1_0","backsideThickness","samples","thickness","anisotropicBlur","ior","iridescence","iridescenceIOR","iridescenceThicknessRange","clearcoat","roughness","envMapIntensity","metalness","fileName","_jsxFileName","lineNumber","columnNumber","args","map","side","BackSide","build_scenebuild_sceneSnow_Scene_blinn1_0","count","isMobile","Texts","_c","preload","letterSpacing","size","font","maxWidth","textAlign","fontSize","lineHeight","fillOpacity","_c2","$RefreshReg$"],"sources":["C:/Users/stefa/OneDrive/Desktop/Merry Christmas/src/SnowGlobeModel.js"],"sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nAuthor: MMKH (https://sketchfab.com/mmkh)\nLicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nSource: https://sketchfab.com/3d-models/snowglobe-day-11-3dinktober2019-snow-08b4443a71c94647a1298346a1ea1203\nTitle: Snowglobe - Day 11 #3DInktober2019-Snow\n*/\n\nimport { useFrame, useThree } from '@react-three/fiber'\nimport { MeshTransmissionMaterial, useGLTF, useTexture, Text, Billboard, Text3D } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { useMemo, useRef, useLayoutEffect, useState, useEffect } from 'react'\nimport { easing } from 'maath'\nimport gsap from 'gsap'\nimport SnowFlakes from './SnowFlakes'\nimport FireWorks from './FireWorks'\nimport LumaWorld from './LumaWorld'\n\nexport default function SnowGlobeModel(props) {\n  const { nodes, materials } = useGLTF('/snowglobe-transformed.glb')\n  const footer = document.querySelector('.footer')\n  const snowGlobeRef = useRef()\n  const snowGlobeRef2 = useRef()\n  const internalWorldRef = useRef()\n  const fireWorksRef = useRef()\n  const [insideMesh, setInsideMesh] = useState(false)\n\n  const groupRef = useRef()\n  const texture = useTexture('/epic.jpg')\n  const { camera } = useThree()\n  const cameraPosition = camera.position\n  const ray = new THREE.Ray(new THREE.Vector2(0, 0), cameraPosition)\n  const raycaster = new THREE.Raycaster()\n\n  function useGsapContext(scope) {\n    const ctx = useMemo(() => gsap.context(() => {}, scope), [scope])\n    return ctx\n  }\n\n  const ctx = useGsapContext(snowGlobeRef)\n\n  useLayoutEffect(() => {\n    gsap.to(camera.position, {\n      z: props.inside ? 0.1 : 3,\n      x: props.inside ? 0.1 : 3,\n      ease: 'power3.inOut',\n      duration: 1.8\n    })\n\n    return () => ctx.revert()\n  }, [props.inside])\n\n  useFrame((state, delta) => {\n    checkIntersection(snowGlobeRef.current, delta)\n  })\n\n  const checkIntersection = (object, delta) => {\n    raycaster.set(cameraPosition, ray.direction)\n\n    const intersections = raycaster.intersectObject(object)\n\n    if (intersections.length > 0) {\n      setInsideMesh(false)\n    } else {\n      setInsideMesh(true)\n    }\n    easing.dampC(internalWorldRef.current.material.color, intersections.length > 0 ? 'grey' : 'white', 0.25, delta)\n    easing.damp(footer.style, 'opacity', intersections.length > 0 ? '0.1' : '1', 0.25, delta)\n  }\n\n  useEffect(() => {\n    if (!insideMesh) {\n      snowGlobeRef2.current.visible = false\n      snowGlobeRef.current.visible = false\n      fireWorksRef.current.visible = true\n      camera.fov = 95\n      camera.updateProjectionMatrix()\n    } else {\n      camera.fov = 65\n      camera.updateProjectionMatrix()\n      snowGlobeRef2.current.visible = true\n      snowGlobeRef.current.visible = true\n      fireWorksRef.current.visible = false\n    }\n  }, [insideMesh])\n\n  return (\n    <group ref={groupRef} {...props} dispose={null}>\n      <mesh ref={snowGlobeRef} castShadow receiveShadow geometry={nodes.build_scenebuild_sceneSnow_Scene_Snow_Globe___Default1_0.geometry}>\n        <MeshTransmissionMaterial\n          backsideThickness={8}\n          samples={4}\n          thickness={0.9}\n          anisotropicBlur={0.8}\n          ior={1.8}\n          iridescence={0.5}\n          iridescenceIOR={1}\n          iridescenceThicknessRange={[0, 1400]}\n          clearcoat={1}\n          roughness={0.2}\n          envMapIntensity={0.7}\n          metalness={0.3}\n        />\n      </mesh>\n      <mesh ref={internalWorldRef} position={[0, 15, 0]}>\n        <sphereGeometry args={[12.5, 24, 24]} />\n        <meshStandardMaterial map={texture} side={THREE.BackSide} envMapIntensity={3} />\n        <FireWorks ref={fireWorksRef} />\n      </mesh>\n      <mesh ref={snowGlobeRef2} castShadow receiveShadow geometry={nodes.build_scenebuild_sceneSnow_Scene_blinn1_0.geometry}>\n        <meshPhysicalMaterial metalness={0.2} roughness={0.2} color={'grey'} envMapIntensity={2} />\n        <SnowFlakes count={2000} />\n      </mesh>\n      {!props.isMobile && <LumaWorld visible={insideMesh} />}\n      <Texts />\n    </group>\n  )\n}\nuseGLTF.preload('/snowglobe-transformed.glb')\n\nfunction Texts() {\n  return (\n    <>\n      <Text3D letterSpacing={0.06} size={0.3} font=\"/Inter_Bold.json\" position={[-2.8, 3.3, 10]}>\n        Stefan Cimpan\n        <meshPhysicalMaterial metalness={0.2} roughness={0.2} color={'#a1a1a1'} />\n      </Text3D>\n      <Billboard>\n        <Text font=\"/DancingScript-VariableFont_wght.ttf\" maxWidth={3.5} textAlign=\"center\" position={[0, 12.45, 0]} fontSize=\"0.35\" lineHeight={0.85}>\n          Wishing you a restful holiday season. {'\\n\\n'}May your Christmas be blessed with lots of love, peace, and happiness.\n        </Text>\n        <Text maxWidth={2.5} textAlign=\"center\" position={[0, 11.2, 0]} fillOpacity={0.6} fontSize=\"0.1\">\n          Thank you for all your support in 2023. Great things are coming in 2024. Please stay tunned\n        </Text>\n        <Text maxWidth={1.5} textAlign=\"center\" position={[0, 10.8, 0]} fontSize=\"0.08\">\n          Stefan Cimpan\n        </Text>\n      </Billboard>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}